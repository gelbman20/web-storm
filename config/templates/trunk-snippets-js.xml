<templateSet group="trunk-snippets-js">
  <template name="mfp" value="/**&#10; * @module       Magnific Popup&#10; * @description  Enables Magnific Popup Plugin&#10; */&#10;;&#10;(function ($) {&#10;&#10;    var o = $('[data-lightbox]').not('[data-lightbox=&quot;gallery&quot;] [data-lightbox]'),&#10;        g = $('[data-lightbox^=&quot;gallery&quot;]');&#10;&#10;    if (o.length &gt; 0 || g.length &gt; 0) {&#10;&#10;        $(document).ready(function () {&#10;            if (o.length) {&#10;                o.each(function () {&#10;                    var $this = $(this);&#10;                    $this.magnificPopup({&#10;                        type: $this.attr(&quot;data-lightbox&quot;)&#10;                    });&#10;                })&#10;            }&#10;&#10;            if (g.length) {&#10;                g.each(function () {&#10;                    var $gallery = $(this);&#10;                    $gallery&#10;                        .find('[data-lightbox]').each(function () {&#10;                            var $item = $(this);&#10;                            $item.addClass(&quot;mfp-&quot; + $item.attr(&quot;data-lightbox&quot;));&#10;                        })&#10;                        .end()&#10;                        .magnificPopup({&#10;                            delegate: '[data-lightbox]',&#10;                            type: &quot;image&quot;,&#10;                            gallery: {&#10;                                enabled: true&#10;                            }&#10;                        });&#10;                })&#10;            }&#10;        });&#10;    }&#10;})(jQuery);" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="countto" value="/**&#10; * @module       Count To&#10; * @description  Enables Count To Plugin&#10; */&#10;;&#10;(function ($) {&#10;    var o = $('.counter');&#10;    if (o.length &gt; 0) {&#10;        &#10;        $(document).ready(function () {&#10;            o.countTo();&#10;        });&#10;    }&#10;})(jQuery);" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="countdown" value="/**&#10; * @module       Countdown&#10; * @description  Enables Countdown Plugin&#10; */&#10;;&#10;(function($) {&#10;    var o = $('.countdown'),&#10;    type = o.attr('data-type'),&#10;    time = o.attr('data-time'),&#10;    format = o.attr('data-format'); &#10;    &#10;    if (o.length) {&#10;              &#10;        var d = new Date();&#10;        d.setTime(Date.parse(time)).toLocaleString();&#10;        &#10;        $(document).ready(function() {        &#10;            var settings = [];&#10;            &#10;            settings[type] = d;&#10;            settings['format'] = format;&#10;            &#10;            o.countdown(settings);&#10;        });&#10;    }&#10;})(jQuery);" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="vide" value="/**&#10; * @module       Vide&#10; * @description  Enables Vide.js Plugin&#10; */&#10;;&#10;(function ($) {&#10;    var o = $(&quot;.vide&quot;);&#10;    if (o.length) {&#10;         $(document).ready(function () {&#10;            o.wrapInner('&lt;div class=&quot;vide__body&quot;&gt;&lt;/div&gt;');&#10;        });&#10;    }&#10;})(jQuery);" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="swiper" value="/**&#10; * @module       Swiper Slider&#10; * @description  Enables Swiper Plugin&#10; */&#10;;&#10;(function ($, undefined) {&#10;    var o = $(&quot;.swiper-slider&quot;);&#10;    if (o.length) {&#10;         function getSwiperHeight(object, attr) {&#10;            var val = object.attr(&quot;data-&quot; + attr),&#10;                dim;&#10;&#10;            if (!val) {&#10;                return undefined;&#10;            }&#10;&#10;            dim = val.match(/(px)|(%)|(vh)$/i);&#10;&#10;            if (dim.length) {&#10;                switch (dim[0]) {&#10;                    case &quot;px&quot;:&#10;                        return parseFloat(val);&#10;                    case &quot;vh&quot;:&#10;                        return $(window).height() * (parseFloat(val) / 100);&#10;                    case &quot;%&quot;:&#10;                        return object.width() * (parseFloat(val) / 100);&#10;                }&#10;            } else {&#10;                return undefined;&#10;            }&#10;        }&#10;&#10;        function toggleSwiperInnerVideos(swiper) {&#10;            var videos;&#10;&#10;            $.grep(swiper.slides, function (element, index) {&#10;                var $slide = $(element),&#10;                    video;&#10;&#10;                if (index === swiper.activeIndex) {&#10;                    videos = $slide.find(&quot;video&quot;);&#10;                    if (videos.length) {&#10;                        videos.get(0).play();&#10;                    }&#10;                } else {&#10;                    $slide.find(&quot;video&quot;).each(function () {&#10;                        this.pause();&#10;                    });&#10;                }&#10;            });&#10;        }&#10;&#10;        function toggleSwiperCaptionAnimation(swiper) {&#10;            if (isIE() &amp;&amp; isIE() &lt; 10) {&#10;                return;&#10;            }&#10;&#10;            var prevSlide = $(swiper.container),&#10;                nextSlide = $(swiper.slides[swiper.activeIndex]);&#10;&#10;            prevSlide&#10;                .find(&quot;[data-caption-animate]&quot;)&#10;                .each(function () {&#10;                    var $this = $(this);&#10;                    $this&#10;                        .removeClass(&quot;animated&quot;)&#10;                        .removeClass($this.attr(&quot;data-caption-animate&quot;))&#10;                        .addClass(&quot;not-animated&quot;);&#10;                });&#10;&#10;            nextSlide&#10;                .find(&quot;[data-caption-animate]&quot;)&#10;                .each(function () {&#10;                    var $this = $(this),&#10;                        delay = $this.attr(&quot;data-caption-delay&quot;);&#10;&#10;                    setTimeout(function () {&#10;                        $this&#10;                            .removeClass(&quot;not-animated&quot;)&#10;                            .addClass($this.attr(&quot;data-caption-animate&quot;))&#10;                            .addClass(&quot;animated&quot;);&#10;                    }, delay ? parseInt(delay) : 0);&#10;                });&#10;        }&#10;&#10;        $(document).ready(function () {&#10;            o.each(function () {&#10;                var s = $(this);&#10;&#10;                var pag = s.find(&quot;.swiper-pagination&quot;),&#10;                    next = s.find(&quot;.swiper-button-next&quot;),&#10;                    prev = s.find(&quot;.swiper-button-prev&quot;),&#10;                    bar = s.find(&quot;.swiper-scrollbar&quot;),&#10;                    h = getSwiperHeight(o, &quot;height&quot;), mh = getSwiperHeight(o, &quot;min-height&quot;);&#10;                s.find(&quot;.swiper-slide&quot;)&#10;                    .each(function () {&#10;                        var $this = $(this),&#10;                            url;&#10;                        if (url = $this.attr(&quot;data-slide-bg&quot;)) {&#10;                            $this.css({&#10;                                &quot;background-image&quot;: &quot;url(&quot; + url + &quot;)&quot;,&#10;                                &quot;background-size&quot;: &quot;cover&quot;&#10;                            })&#10;                        }&#10;                    })&#10;                    .end()&#10;                    .find(&quot;[data-caption-animate]&quot;)&#10;                    .addClass(&quot;not-animated&quot;)&#10;                    .end()&#10;                    .swiper({&#10;                        autoplay: s.attr('data-autoplay') ? s.attr('data-autoplay') === &quot;false&quot; ? undefined : s.attr('data-autoplay') : 5000,&#10;                        direction: s.attr('data-direction') ? s.attr('data-direction') : &quot;horizontal&quot;,&#10;                        effect: s.attr('data-slide-effect') ? s.attr('data-slide-effect') : &quot;slide&quot;,&#10;                        speed: s.attr('data-slide-speed') ? s.attr('data-slide-speed') : 600,&#10;                        keyboardControl: s.attr('data-keyboard') === &quot;true&quot;,&#10;                        mousewheelControl: s.attr('data-mousewheel') === &quot;true&quot;,&#10;                        mousewheelReleaseOnEdges: s.attr('data-mousewheel-release') === &quot;true&quot;,&#10;                        nextButton: next.length ? next.get(0) : null,&#10;                        prevButton: prev.length ? prev.get(0) : null,&#10;                        pagination: pag.length ? pag.get(0) : null,&#10;                        paginationClickable: pag.length ? pag.attr(&quot;data-clickable&quot;) !== &quot;false&quot; : false,&#10;                        paginationBulletRender: pag.length ? pag.attr(&quot;data-index-bullet&quot;) === &quot;true&quot; ? function (index, className) {&#10;                            return '&lt;span class=&quot;' + className + '&quot;&gt;' + (index + 1) + '&lt;/span&gt;';&#10;                        } : null : null,&#10;                        scrollbar: bar.length ? bar.get(0) : null,&#10;                        scrollbarDraggable: bar.length ? bar.attr(&quot;data-draggable&quot;) !== &quot;false&quot; : true,&#10;                        scrollbarHide: bar.length ? bar.attr(&quot;data-draggable&quot;) === &quot;false&quot; : false,&#10;                        loop: s.attr('data-loop') !== &quot;false&quot;,&#10;                        onTransitionStart: function (swiper) {&#10;                            toggleSwiperInnerVideos(swiper);&#10;                        },&#10;                        onTransitionEnd: function (swiper) {&#10;                            toggleSwiperCaptionAnimation(swiper);&#10;                        },&#10;                        onInit: function (swiper) {&#10;                            toggleSwiperInnerVideos(swiper);&#10;                            toggleSwiperCaptionAnimation(swiper);&#10;&#10;                            var o = $(swiper.container).find('.rd-parallax');&#10;                            if (o.length &amp;&amp; window.RDParallax) {&#10;                                o.RDParallax({&#10;                                    layerDirection: ($('html').hasClass(&quot;smoothscroll&quot;) || $('html').hasClass(&quot;smoothscroll-all&quot;)) &amp;&amp; !isIE() ? &quot;normal&quot; : &quot;inverse&quot;&#10;                                });&#10;                            }&#10;                        }&#10;                    });&#10;&#10;                $(window)&#10;                    .on(&quot;resize&quot;, function () {&#10;                        var mh = getSwiperHeight(s, &quot;min-height&quot;),&#10;                            h = getSwiperHeight(s, &quot;height&quot;);&#10;                        if (h) {&#10;                            s.css(&quot;height&quot;, mh ? mh &gt; h ? mh : h : h);&#10;                        }&#10;                    })&#10;                    .load(function () {&#10;                        s.find(&quot;video&quot;).each(function () {&#10;                            if (!$(this).parents(&quot;.swiper-slide-active&quot;).length) {&#10;                                this.pause();&#10;                            }&#10;                        });&#10;                    })&#10;                    .trigger(&quot;resize&quot;);&#10;            });&#10;        });&#10;    }&#10;})(jQuery);" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="owl" value="/**&#10; * @module     Owl Carousel&#10; * @description Enables Owl Carousel Plugin&#10; */&#10;;&#10;(function ($) {&#10;    var o = $('.owl-carousel');&#10;    if (o.length) {&#10;&#10;        var isTouch = &quot;ontouchstart&quot; in window;&#10;&#10;        function preventScroll(e) {&#10;            e.preventDefault();&#10;        }&#10;&#10;        $(document).ready(function () {&#10;            o.each(function () {&#10;                var c = $(this),&#10;                    responsive = {};&#10;&#10;                var aliaces = [&quot;-&quot;, &quot;-xs-&quot;, &quot;-sm-&quot;, &quot;-md-&quot;, &quot;-lg-&quot;],&#10;                    values = [0, 480, 768, 992, 1200],&#10;                    i, j;&#10;&#10;                for (i = 0; i &lt; values.length; i++) {&#10;                    responsive[values[i]] = {};&#10;                    for (j = i; j &gt;= -1; j--) {&#10;                        if (!responsive[values[i]][&quot;items&quot;] &amp;&amp; c.attr(&quot;data&quot; + aliaces[j] + &quot;items&quot;)) {&#10;                            responsive[values[i]][&quot;items&quot;] = j &lt; 0 ? 1 : parseInt(c.attr(&quot;data&quot; + aliaces[j] + &quot;items&quot;));&#10;                        }&#10;                        if (!responsive[values[i]][&quot;stagePadding&quot;] &amp;&amp; responsive[values[i]][&quot;stagePadding&quot;] !== 0 &amp;&amp; c.attr(&quot;data&quot; + aliaces[j] + &quot;stage-padding&quot;)) {&#10;                            responsive[values[i]][&quot;stagePadding&quot;] = j &lt; 0 ? 0 : parseInt(c.attr(&quot;data&quot; + aliaces[j] + &quot;stage-padding&quot;));&#10;                        }&#10;                        if (!responsive[values[i]][&quot;margin&quot;] &amp;&amp; responsive[values[i]][&quot;margin&quot;] !== 0 &amp;&amp; c.attr(&quot;data&quot; + aliaces[j] + &quot;margin&quot;)) {&#10;                            responsive[values[i]][&quot;margin&quot;] = j &lt; 0 ? 30 : parseInt(c.attr(&quot;data&quot; + aliaces[j] + &quot;margin&quot;));&#10;                        }&#10;                    }&#10;                }&#10;&#10;                c.owlCarousel({&#10;                    autoplay: c.attr(&quot;data-autoplay&quot;) === &quot;true&quot;,&#10;                    loop: c.attr(&quot;data-loop&quot;) !== &quot;false&quot;,&#10;                    items: 1,&#10;                    mouseDrag: c.attr(&quot;data-mouse-drag&quot;) !== &quot;false&quot;,&#10;                    nav: c.attr(&quot;data-nav&quot;) === &quot;true&quot;,&#10;                    dots: c.attr(&quot;data-dots&quot;) === &quot;true&quot;,&#10;                    dotsEach: c.attr(&quot;data-dots-each&quot;) ? parseInt(c.attr(&quot;data-dots-each&quot;)) : false,&#10;                    responsive: responsive,&#10;                    navText: [],&#10;                    onInitialized: function () {&#10;                        if ($.fn.magnificPopup) {&#10;                            var o = this.$element.attr('data-lightbox') !== undefined &amp;&amp; this.$element.attr(&quot;data-lightbox&quot;) !== &quot;gallery&quot;,&#10;                                g = this.$element.attr('data-lightbox') === &quot;gallery&quot;;&#10;&#10;                            if (o) {&#10;                                this.$element.each(function () {&#10;                                    var $this = $(this);&#10;                                    $this.magnificPopup({&#10;                                        type: $this.attr(&quot;data-lightbox&quot;),&#10;                                        callbacks: {&#10;                                            open: function () {&#10;                                                if (isTouch) {&#10;                                                    $(document).on(&quot;touchmove&quot;, preventScroll);&#10;                                                    $(document).swipe({&#10;                                                        swipeDown: function () {&#10;                                                            $.magnificPopup.close();&#10;                                                        }&#10;                                                    });&#10;                                                }&#10;                                            },&#10;                                            close: function () {&#10;                                                if (isTouch) {&#10;                                                    $(document).off(&quot;touchmove&quot;, preventScroll);&#10;                                                    $(document).swipe(&quot;destroy&quot;);&#10;                                                }&#10;                                            }&#10;                                        }&#10;                                    });&#10;                                })&#10;                            }&#10;&#10;                            if (g) {&#10;                                this.$element.each(function () {&#10;                                    var $gallery = $(this);&#10;&#10;                                    $gallery&#10;                                        .find('[data-lightbox]').each(function () {&#10;                                            var $item = $(this);&#10;                                            $item.addClass(&quot;mfp-&quot; + $item.attr(&quot;data-lightbox&quot;));&#10;                                        })&#10;                                        .end()&#10;                                        .magnificPopup({&#10;                                            delegate: '.owl-item [data-lightbox]',&#10;                                            type: &quot;image&quot;,&#10;                                            gallery: {&#10;                                                enabled: true&#10;                                            },&#10;                                            callbacks: {&#10;                                                open: function () {&#10;                                                    if (isTouch) {&#10;                                                        $(document).on(&quot;touchmove&quot;, preventScroll);&#10;                                                        $(document).swipe({&#10;                                                            swipeDown: function () {&#10;                                                                $.magnificPopup.close();&#10;                                                            }&#10;                                                        });&#10;                                                    }&#10;                                                },&#10;                                                close: function () {&#10;                                                    if (isTouch) {&#10;                                                        $(document).off(&quot;touchmove&quot;, preventScroll);&#10;                                                        $(document).swipe(&quot;destroy&quot;);&#10;                                                    }&#10;                                                }&#10;                                            }&#10;                                        });&#10;                                })&#10;                            }&#10;                        }&#10;                    }&#10;                });&#10;            });&#10;        });&#10;    }&#10;})(jQuery);" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="calendar" value="/**&#10; * @module       RD Calendar&#10; * @description  Enables RD Calendar Plugin&#10; */&#10;;&#10;;&#10;(function ($, window, document) {&#10;    var o = $('.rd-calendar');&#10;&#10;    if (o.length) {&#10;         $(document).ready(function () {&#10;            o.each(function () {&#10;                var c = $(this);&#10;                c.rdCalendar({&#10;                    days: c.attr(&quot;data-days&quot;)? c.attr(&quot;data-days&quot;).split(/\s?,\s?/i) : ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],&#10;                    month: c.attr(&quot;data-months&quot;)? c.attr(&quot;data-months&quot;).split(/\s?,\s?/i) : ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']&#10;                });&#10;            })&#10;        });&#10;    }&#10;})(window.jQuery, window, document);" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="progressbar" value="/**&#10; * @module       Progress Bar&#10; * @description  Enables Progress Bar Plugin&#10; */&#10;;&#10;(function ($) {&#10;    var o = $(&quot;.progress-bar&quot;);&#10;    if (o.length) {&#10;          function isScrolledIntoView(elem) {&#10;            var $window = $(window), $elem = $(elem);&#10;            return $elem.offset().top + $elem.height() &gt;= $window.scrollTop() &amp;&amp; $elem.offset().top &lt;= $window.scrollTop() + $window.height();&#10;        }&#10;&#10;        $(document).ready(function () {&#10;            o.each(function () {&#10;                var bar, type;&#10;&#10;                if (&#10;                    this.className.indexOf(&quot;progress-bar-horizontal&quot;) &gt; -1&#10;                ) {&#10;                    type = 'Line';&#10;                }&#10;&#10;                if (&#10;                    this.className.indexOf(&quot;progress-bar-radial&quot;) &gt; -1&#10;                ) {&#10;                    type = 'Circle';&#10;                }&#10;&#10;                if (this.getAttribute(&quot;data-stroke&quot;) &amp;&amp; this.getAttribute(&quot;data-value&quot;) &amp;&amp; type) {&#10;                    bar = new ProgressBar[type](this, {&#10;                        strokeWidth: Math.round(parseFloat(this.getAttribute(&quot;data-stroke&quot;)) / this.offsetWidth * 100)&#10;                        ,&#10;                        trailWidth: this.getAttribute(&quot;data-trail&quot;) ? Math.round(parseFloat(this.getAttribute(&quot;data-trail&quot;)) / this.offsetWidth * 100) : 0&#10;                        ,&#10;                        text: {&#10;                            value: this.getAttribute(&quot;data-counter&quot;) === &quot;true&quot; ? '0' : null&#10;                            , className: 'progress-bar__body'&#10;                            , style: null&#10;                        }&#10;                    });&#10;&#10;                    bar.svg.setAttribute('preserveAspectRatio', &quot;none meet&quot;);&#10;                    if (type === 'Line') {&#10;                        bar.svg.setAttributeNS(null, &quot;height&quot;, this.getAttribute(&quot;data-stroke&quot;));&#10;                    }&#10;&#10;                    bar.path.removeAttribute(&quot;stroke&quot;);&#10;                    bar.path.className.baseVal = &quot;progress-bar__stroke&quot;;&#10;                    if (bar.trail) {&#10;                        bar.trail.removeAttribute(&quot;stroke&quot;);&#10;                        bar.trail.className.baseVal = &quot;progress-bar__trail&quot;;&#10;                    }&#10;&#10;                    if (this.getAttribute(&quot;data-easing&quot;) &amp;&amp; !isIE()) {&#10;                        $(document)&#10;                            .on(&quot;scroll&quot;, $.proxy(function () {&#10;                                if (isScrolledIntoView(this) &amp;&amp; this.className.indexOf(&quot;progress-bar--animated&quot;) === -1) {&#10;                                    var _this = this;&#10;                                    this.className += &quot; progress-bar--animated&quot;;&#10;                                    bar.animate(parseInt(this.getAttribute(&quot;data-value&quot;)) / 100.0, {&#10;                                        easing: this.getAttribute(&quot;data-easing&quot;)&#10;                                        ,&#10;                                        duration: this.getAttribute(&quot;data-duration&quot;) ? parseInt(this.getAttribute(&quot;data-duration&quot;)) : 800&#10;                                        ,&#10;                                        step: function (state, b) {&#10;                                            if (_this.getAttribute(&quot;data-counter&quot;) === &quot;true&quot;) {&#10;                                                if (b._container.className.indexOf(&quot;progress-bar-horizontal&quot;) &gt; -1) {&#10;                                                    b.text.style.width = Math.abs(b.value() * 100).toFixed(0) + &quot;%&quot;&#10;                                                }&#10;                                                b.setText(Math.abs(b.value() * 100).toFixed(0));&#10;                                            }&#10;                                        }&#10;                                    });&#10;                                }&#10;                            }, this))&#10;                            .trigger(&quot;scroll&quot;);&#10;                    } else {&#10;                        bar.set(parseInt(this.getAttribute(&quot;data-value&quot;)) / 100.0);&#10;                        bar.setText(this.getAttribute(&quot;data-value&quot;));&#10;                        if (type === 'Line') {&#10;                            bar.text.style.width = parseInt(this.getAttribute(&quot;data-value&quot;)) + &quot;%&quot;;&#10;                        }&#10;                    }&#10;                } else {&#10;                    console.error(this.className + &quot;: progress bar type is not defined&quot;);&#10;                }&#10;            });&#10;        });&#10;    }&#10;})(jQuery);" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="isotope" value="/**&#10; * @module       Isotope&#10; * @description  Enables Isotope Plugin&#10; */&#10;;&#10;(function ($) {&#10;    var o = $(&quot;.isotope&quot;);&#10;    if (o.length) {&#10;        $(document).ready(function () {&#10;            o.each(function () {&#10;                var _this = this&#10;                    , iso = new Isotope(_this, {&#10;                        itemSelector: '[class*=&quot;col-&quot;], .isotope-item',&#10;                        layoutMode: _this.getAttribute('data-isotope-layout') ? _this.getAttribute('data-isotope-layout') : 'masonry'&#10;                    });&#10;&#10;                $(window).on(&quot;resize&quot;, function () {&#10;                    iso.layout();&#10;                });&#10;&#10;                $(window).load(function () {&#10;                    iso.layout();&#10;                    setTimeout(function () {&#10;                        _this.className += &quot; isotope--loaded&quot;;&#10;                        iso.layout();&#10;                    }, 600);&#10;                });&#10;            });&#10;&#10;            $(&quot;.isotope-filters-trigger&quot;).on(&quot;click&quot;, function () {&#10;                $(this).parents(&quot;.isotope-filters&quot;).toggleClass(&quot;active&quot;);&#10;            });&#10;&#10;            $('.isotope').magnificPopup({&#10;                delegate: ' &gt; :visible .thumb',&#10;                type: &quot;image&quot;,&#10;                gallery: {&#10;                    enabled: true&#10;                },&#10;            });&#10;&#10;            $(&quot;[data-isotope-filter]&quot;).on(&quot;click&quot;, function () {&#10;                $('[data-isotope-filter][data-isotope-group=&quot;' + this.getAttribute(&quot;data-isotope-group&quot;) + '&quot;]').removeClass(&quot;active&quot;);&#10;                $(this).addClass(&quot;active&quot;);&#10;                $(this).parents(&quot;.isotope-filters&quot;).removeClass(&quot;active&quot;);&#10;                var iso = $('.isotope[data-isotope-group=&quot;' + this.getAttribute(&quot;data-isotope-group&quot;) + '&quot;]');&#10;                iso.isotope({&#10;                    itemSelector: '[class*=&quot;col-&quot;], .isotope-item',&#10;                    layoutMode: iso.attr('data-isotope-layout') ? iso.attr('data-isotope-layout') : 'masonry',&#10;                    filter: this.getAttribute(&quot;data-isotope-filter&quot;) == '*' ? '*' : '[data-filter=&quot;' + this.getAttribute(&quot;data-isotope-filter&quot;) + '&quot;]'&#10;                })&#10;            })&#10;        });&#10;    }&#10;})(jQuery);" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="stacktable" value="/**&#10; * @module       Stacktable&#10; * @description  Enables Stucktable Plugin&#10; */&#10;;&#10;(function ($) {&#10;    var o = $('table[data-responsive=&quot;true&quot;]');&#10;    if (o.length) {&#10;           $(document).ready(function () { &#10;            o.each(function () {&#10;                $(this).stacktable();&#10;            });&#10;        });&#10;    }&#10;})(jQuery);" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rdtwitter" value="/**&#10; * @module       RD Twitterfeed&#10; * @description  Enables RD Twitterfeed Plugin&#10; */&#10;;&#10;(function ($) {&#10;    var o = $('.twitter');&#10;    if (o.length &gt; 0) {&#10;        $(document).ready(function () {&#10;            o.RDTwitter();&#10;        });&#10;    }&#10;})(jQuery);" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rdparallax" value="/**&#10; * @module       RD Parallax 3&#10; * @description  Enables RD Parallax 3 Plugin&#10; */&#10;;&#10;(function ($) {&#10;    var o = $('.rd-parallax');&#10;    if (o.length) {&#10;        $(document).ready(function () {&#10;            o.each(function () {&#10;                if (!$(this).parents(&quot;.swiper-slider&quot;).length) {&#10;                    $.RDParallax();&#10;                }&#10;            });&#10;        });&#10;    }&#10;})(jQuery);" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="tabs" value="/**&#10; * @module       Responsive Tabs&#10; * @description  Enables Easy Responsive Tabs Plugin&#10; */&#10;;&#10;(function ($) {&#10;    var o = $('.responsive-tabs');&#10;    if (o.length &gt; 0) {&#10;           $(document).ready(function () {&#10;            o.each(function () {&#10;                var $this = $(this);&#10;                $this.easyResponsiveTabs({&#10;                    type: $this.attr(&quot;data-type&quot;) === &quot;accordion&quot; ? &quot;accordion&quot; : &quot;default&quot;&#10;                });&#10;            })&#10;        });&#10;    }&#10;})(jQuery);" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rdnavbar" value="/**&#10; * @module       RD Navbar&#10; * @description  Enables RD Navbar Plugin&#10; */&#10;;&#10;(function ($) {&#10;    var o = $('.rd-navbar');&#10;    if (o.length &gt; 0) {&#10;        $(document).ready(function () {&#10;            o.RDNavbar({&#10;                stuckWidth: 768,&#10;                stuckMorph: true,&#10;                stuckLayout: &quot;rd-navbar-static&quot;,&#10;                responsive: {&#10;                    0: {&#10;                        layout: 'rd-navbar-fixed',&#10;                        focusOnHover: false&#10;                    },&#10;                    768: {&#10;                        layout: 'rd-navbar-fullwidth'&#10;                    },&#10;                    1200: {&#10;                        layout: o.attr(&quot;data-rd-navbar-lg&quot;).split(&quot; &quot;)[0],&#10;                    }&#10;                },&#10;                onepage: {&#10;                    enable: false,&#10;                    offset: 0,&#10;                    speed: 400&#10;                }&#10;            });&#10;        });&#10;    }&#10;})(jQuery);" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rdmap" value="/**&#10; * @module       RD Google Map&#10; * @description  Enables RD Google Map Plugin&#10; */&#10;;&#10;(function ($) {&#10;    var o = $('#google-map');&#10;&#10;    if (o.length) {&#10;        include('//maps.google.com/maps/api/js');&#10;        $(document).ready(function () {&#10;            var head = document.getElementsByTagName('head')[0],&#10;                insertBefore = head.insertBefore;&#10;&#10;            head.insertBefore = function (newElement, referenceElement) {&#10;                if (newElement.href &amp;&amp; newElement.href.indexOf('//fonts.googleapis.com/css?family=Roboto') != -1 || newElement.innerHTML.indexOf('gm-style') != -1) {&#10;                    return;&#10;                }&#10;                insertBefore.call(head, newElement, referenceElement);&#10;            };&#10;&#10;            lazyInit(o, function () {&#10;                o.googleMap({&#10;                    styles: []&#10;                });&#10;            });&#10;        });&#10;    }&#10;})(jQuery);" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rdform" value="/**&#10; * @module       RD Mailform&#10; * @description  Enables RD Mailform Plugin&#10; */&#10;;&#10;(function ($) {&#10;    var o = $('.rd-mailform');&#10;    if (o.length &gt; 0) {&#10;         $(document).ready(function () {&#10;            var o = $('.rd-mailform');&#10;&#10;            if (o.length) {&#10;                o.rdMailForm({&#10;                    validator: {&#10;                        'constraints': {&#10;                            '@LettersOnly': {&#10;                                message: 'Please use letters only!'&#10;                            },&#10;                            '@NumbersOnly': {&#10;                                message: 'Please use numbers only!'&#10;                            },&#10;                            '@NotEmpty': {&#10;                                message: 'Field should not be empty!'&#10;                            },&#10;                            '@Email': {&#10;                                message: 'Enter valid e-mail address!'&#10;                            },&#10;                            '@Phone': {&#10;                                message: 'Enter valid phone number!'&#10;                            },&#10;                            '@Date': {&#10;                                message: 'Use MM/DD/YYYY format!'&#10;                            },&#10;                            '@SelectRequired': {&#10;                                message: 'Please choose an option!'&#10;                            }&#10;                        }&#10;                    }&#10;                }, {&#10;                    'MF000': 'Sent',&#10;                    'MF001': 'Recipients are not set!',&#10;                    'MF002': 'Form will not work locally!',&#10;                    'MF003': 'Please, define email field in your form!',&#10;                    'MF004': 'Please, define type of your form!',&#10;                    'MF254': 'Something went wrong with PHPMailer!',&#10;                    'MF255': 'There was an error submitting the form!'&#10;                });&#10;            }&#10;        });&#10;    }&#10;})(jQuery);" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rdinsta" value="/**&#10; * @module       RD-instafeed&#10; * @description  Enables RD-instafeed Plugin&#10; */&#10;;&#10;(function ($) {&#10;    var o = $('.instafeed');&#10;    if (o.length) {&#10;        $(document).ready(function () {&#10;            o.RDInstafeed();&#10;        });&#10;    }&#10;})(jQuery);" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rdflickr" value="/**&#10; * @module       RD Flickery&#10; * @description  Enables RD Flickery plugin&#10; */&#10;;&#10;(function ($) {&#10;    var o = $('.flickr');&#10;    if (o.length) {&#10;        $(document).ready(function () {&#10;            o.RDFlickr();&#10;        });&#10;    }&#10;})(jQuery);" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="facebook" value="/**&#10; * @plugin       Facebook standart  plugin&#10; * @description  Enabled facebook plugin.&#10; */&#10;(function ($) {&#10;    var o = $('.fb-page');&#10;&#10;    if (o.length) {&#10;        $(document).ready(function () {&#10;&#10;            lazyInit(o, function () {&#10;                window.fbAsyncInit = function() {&#10;                    var id = '734741803247761';&#10;                    if (id == '') {&#10;                        id = false;&#10;                    }&#10;                    FB.init({&#10;                        appId: id,&#10;                        xfbml: true,&#10;                        version: 'v2.3'&#10;                    });&#10;                };&#10;&#10;                (function(d, s, id) {&#10;                    var js, fjs = d.getElementsByTagName(s)[0];&#10;                    if (d.getElementById(id)) {&#10;                        return;&#10;                    }&#10;                    js = d.createElement(s);&#10;                    js.id = id;&#10;                    js.src = &quot;//connect.facebook.net/en_US/sdk.js&quot;;&#10;                    fjs.parentNode.insertBefore(js, fjs);&#10;                }(document, 'script', 'facebook-jssdk'));&#10;&#10;                ;&#10;                (function($) {&#10;                    var o = $('.fb-page');&#10;&#10;                    $(window).load(function() {&#10;                        o.css({&#10;                            'display': 'block'&#10;                        })&#10;                            .find('span').css({&#10;                                'width': '100%',&#10;                                'display': 'block',&#10;                                'text-align': 'inherit'&#10;                            })&#10;                            .find('iframe').css({&#10;                                'display': 'inline-block',&#10;                                'position': 'static'&#10;                            });&#10;                    });&#10;&#10;                    $(window).on('load resize', function() {&#10;                        if (o.parent().width() &lt; o.find('iframe').width()) {&#10;                            o.find('iframe').css({&#10;                                'transform': 'scale(' + (o.width() / o.find('iframe').width()) + ')',&#10;                                'transform-origin': '0% 0%'&#10;                            })&#10;                                .parent().css({&#10;                                    'height': (o.find('iframe').height() * (o.width() / o.find('iframe').width())) + 'px'&#10;                                });&#10;                        } else {&#10;                            o&#10;                                .find('span').css({&#10;                                    'height': o.find('iframe').height() + 'px'&#10;                                })&#10;                                .find('iframe').css({&#10;                                    'transform': 'none'&#10;                                });&#10;                        }&#10;                    });&#10;                })(jQuery);&#10;            });&#10;        });&#10;    }&#10;})(jQuery);" description="Facebook dafault widget initialisation" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="twitter" value="/**&#10; * @plugin       Twitter standart  plugin&#10; * @description  Enabled twitter plugin.&#10; */&#10;(function ($) {&#10;    var o = $('.twitter');&#10;&#10;    if (o.length) {&#10;        $(document).ready(function () {&#10;&#10;            lazyInit(o, function () {&#10;                window.twttr = (function(d, s, id) {&#10;                    var t, js, fjs = d.getElementsByTagName(s)[0];&#10;                    if (d.getElementById(id)) return;&#10;                    js = d.createElement(s);&#10;                    js.id = id;&#10;                    js.src = &quot;https://platform.twitter.com/widgets.js&quot;;&#10;                    fjs.parentNode.insertBefore(js, fjs);&#10;                    return window.twttr || (t = {&#10;                            _e: [],&#10;                            ready: function(f) {&#10;                                t._e.push(f)&#10;                            }&#10;                        });&#10;                }(document, &quot;script&quot;, &quot;twitter-wjs&quot;));&#10;            });&#10;        });&#10;    }&#10;})(jQuery);" description="Twitter default widget initialisation" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>